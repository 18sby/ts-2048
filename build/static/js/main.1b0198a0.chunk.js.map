{"version":3,"sources":["reportWebVitals.ts","views/Game2048/index.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","copy","board","newBoard","JSON","parse","stringify","map","row","item","Number","generate","emptyPoses","filter","pos","col","length","len","randomPos","Math","floor","random","index","props","state","updateData","data","gameOver","outFor","i","j","setState","initKeyListener","document","onkeydown","ev","window","event","keyCode","left","up","right","down","touchX","touchY","gameContainer","current","this","mergeTime","merge","gather","touch","pageX","pageY","gapX","gapY","abs","ontouchstart","touchStart","changedTouches","ontouchend","touchEnd","initState","initTouchListener","React","createRef","className","ref","join","onClick","reset","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b0198a0.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react'\nimport { IState, IBoard } from './type';\nimport './index.scss';\n\n// 复制一份数组\nfunction copy(board: IBoard): IBoard {\n  let newBoard: IBoard = JSON.parse(JSON.stringify(board));\n  newBoard = newBoard.map(row => {\n    return row.map(item => Number(item));\n  })\n  return newBoard;\n}\n\n// 在棋盘的四个角中随机生成 1 个 \"2\"\nfunction generate(board: IBoard): IBoard {\n  let poses = [[0, 0], [0, 3], [3, 3], [3, 0]];\n  let emptyPoses = poses.filter(pos => {\n    let [row, col] = pos;\n    return board[row][col] === 0;\n  })\n  if (emptyPoses.length === 0) {\n    return board;\n  }\n  let len = emptyPoses.length;\n  let randomPos = Math.floor(Math.random() * len);\n  let [row, col] = emptyPoses[randomPos];\n  let newBoard = copy(board);\n  newBoard[row][col] = 2;\n  return newBoard;\n}\n\nexport default class index<T> extends Component {\n  public state: IState;\n\n  constructor(props: T) {\n    super(props);\n    this.state = {\n      data: [\n        [0,0,0,0],\n        [0,0,0,0],\n        [0,0,0,0],\n        [0,0,0,0]\n      ],\n      touchX: 0,\n      touchY: 0,\n      gameContainer: {\n        current: null\n      },\n      gameOver: false\n    }\n  }\n\n  left() {\n    let board = copy(this.state.data);\n    let mergeTime = 0;\n    const merge = () => {\n      for (let i = 0; i < board.length; i++) {\n        let row = board[i];\n        for (let j = row.length - 2; j >= 0; j--) {\n          if (row[j] === row[j+1] && row[j] !== 0) {\n            row[j] = row[j] * 2;\n            row[j+1] = 0;\n            mergeTime++;\n          }\n        }\n      }\n    }\n    const gather = () => {\n      mergeTime = 0;\n      for (let i = 0; i < board.length; i++) {\n        let row = board[i];\n        for (let j = 0; j < row.length; j++) {\n          if (row[j] !== 0) {\n            let pos = j-1;\n            while (pos >= 0 && row[pos] === 0) {\n              row[pos] = row[pos+1];\n              row[pos+1] = 0;\n              pos--;\n            }\n          }\n        }\n      }\n    }\n    do {\n      gather();\n      merge();\n    } while (mergeTime > 0);\n    this.updateData(board);\n  }\n\n  up() {\n    let board = copy(this.state.data);\n    let mergeTime = 0;\n    const merge = () => {\n      for (let i = 0; i < board[0].length; i++) {\n        for (let j = board.length - 2; j >= 0; j--) {\n          if (board[j][i] === board[j+1][i] && board[j][i] !== 0) {\n            board[j][i] = board[j][i] * 2;\n            board[j+1][i] = 0;\n            mergeTime++;\n          }\n        }\n      }\n    }\n    const gather = () => {\n      mergeTime = 0;\n      for (let i = 0; i < board[0].length; i++) {\n        for (let j = 1; j < board.length; j++) {\n          if (board[j][i] !== 0) {\n            let pos = j-1;\n            while (pos >= 0 && board[pos][i] === 0) {\n              board[pos][i] = board[pos+1][i];\n              board[pos+1][i] = 0;\n              pos--;\n            }\n          }\n        }\n      }\n    }\n    do {\n      gather();\n      merge();\n    } while (mergeTime > 0);\n    this.updateData(board);\n  }\n\n  right() {\n    let board = copy(this.state.data);\n    let mergeTime = 0; // 上一次合并的次数\n    const merge = () => {\n      for (let i = 0; i < board.length; i++) {\n        let row = board[i];\n        for (let j = 1; j < row.length; j++) {\n          if (row[j] === row[j-1] && row[j] !== 0) {\n            row[j] = row[j] * 2;\n            row[j-1] = 0;\n            mergeTime++;\n          }\n        }\n      }\n    }\n    const gather = () => {\n      mergeTime = 0;\n      for (let i = 0; i < board.length; i++) {\n        let row = board[i];\n        for (let j = row.length - 1; j >= 0; j--) {\n          if (row[j] !== 0) {\n            let pos = j+1;\n            while (pos < row.length && row[pos] === 0) {\n              row[pos] = row[pos-1];\n              row[pos-1] = 0;\n              pos++;\n            }\n          }\n        }\n      }\n    }\n    do {\n      gather();\n      merge();\n    } while (mergeTime > 0);\n    this.updateData(board);\n  }\n\n  down() {\n    let board = copy(this.state.data);\n    let mergeTime = 0;\n    const merge = () => {\n      for (let i = 0; i < board[0].length; i++) {\n        for (let j = 1; j < board.length; j++) {\n          if (board[j][i] === board[j-1][i] && board[j][i] !== 0) {\n            board[j][i] = board[j][i] * 2;\n            board[j-1][i] = 0;\n            mergeTime++;\n          }\n        }\n      }\n    }\n    const gather = () => {\n      mergeTime = 0;\n      for (let i = 0; i < board[0].length; i++) {\n        for (let j = board.length - 1; j >= 0; j--) {\n          if (board[j][i] !== 0) {\n            let pos = j+1;\n            while (pos < board.length && board[pos][i] === 0) {\n              board[pos][i] = board[pos-1][i];\n              board[pos-1][i] = 0;\n              pos++;\n            }\n          }\n        }\n      }\n    }\n    do {\n      gather();\n      merge();\n    } while (mergeTime > 0);\n    this.updateData(board);\n  }\n\n  updateData = (data: IBoard) => {\n    let gameOver = true;\n    outFor: for (let i = 0; i < data.length; i++) {\n      for (let j = 0; j < data[i].length; j++) {\n        if (data[i][j] === 0) {\n          gameOver = false;\n          break outFor;\n        }\n      }\n    }\n    let newBoard;\n    if (!gameOver) {\n      newBoard = generate(data);\n    }\n    this.setState({\n      data: newBoard || data,\n      gameOver\n    });\n  }\n\n  initKeyListener = () => {\n    document.onkeydown = (ev) => {\n      ev = ev || window.event;\n      switch(ev.keyCode){\n        case 37:\n          this.left();\n          break;\n        case 38:\n          this.up();\n          break;\n        case 39:\n          this.right();\n          break;\n        case 40:\n          this.down();\n          break;\n      }\n    }\n  }\n\n  touchStart(touch: Touch) {\n    this.setState({\n      touchX: touch.pageX,\n      touchY: touch.pageY\n    })\n  }\n\n  touchEnd(touch: Touch) {\n    let { touchX, touchY } = this.state;\n    let { pageX, pageY } = touch;\n    let gapX = pageX - touchX;\n    let gapY = pageY - touchY;\n    if (Math.abs(gapX) > Math.abs(gapY)) { // x轴滑动距离大\n      if (gapX >= 0) {\n        this.right();\n      } else {\n        this.left();\n      }\n    } else {\n      if (gapY >= 0) {\n        this.down();\n      } else {\n        this.up();\n      }\n    }\n    \n  }\n\n  initTouchListener() {\n    (this.state.gameContainer.current as any).ontouchstart = (ev: TouchEvent) => {\n      this.touchStart(ev.changedTouches[0]);\n    }\n    (this.state.gameContainer.current as any).ontouchend = (ev: TouchEvent) => {\n      this.touchEnd(ev.changedTouches[0]);\n    }\n  }\n\n  // 重新开始\n  reset() {\n    let data = [\n      [0,0,0,0],\n      [0,0,0,0],\n      [0,0,0,0],\n      [0,0,0,0]\n    ];\n    let initState = generate(generate(data));\n    this.setState({\n      data: initState,\n      touchX: 0,\n      touchY: 0,\n      gameOver: false\n    })\n  }\n\n  componentDidMount() {\n    // 监听键盘的上下左右四个按键\n    this.initKeyListener();\n    // 监听手指滑动的事件\b\n    this.initTouchListener();\n    let initState = generate(this.state.data);\n    this.updateData(initState);\n    this.setState({\n      gameContainer: React.createRef()\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"game-container\" ref={this.state.gameContainer}>\n        {\n          this.state.gameOver === true\n            ? (\n              <div className=\"game-over\" />\n            )\n            : <div />\n        }\n        {\n          this.state.data.map(row => {\n            return row.map((item, index) => {\n              return (\n                <div className={['square', 'back-'+item ].join(' ')} key={index}>\n                  {item === 0 ? null : item}\n                </div>\n              )\n            })\n          })\n        }\n        <div className=\"handle-area\">\n          <button className=\"reset\" onClick={() => this.reset()}>重新开始</button>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport Game2048 from './views/Game2048/index';\n\nexport default function App() {\n  return (\n    <div>\n      <Game2048 />\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/common/minireset.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}